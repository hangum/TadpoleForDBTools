<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Copyright (c) 2013 hangum.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the GNU Lesser Public License v2.1
  which accompanies this distribution, and is available at
  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
  
  Contributors:
      hangum - initial API and implementation
-->
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!-- 
	jtds 1.2.5버전으로 작업.
	MSSQL 2008 R2로 작업.
	이전 버전으로는 테스트 못해봤어요.  - 12.08.07
	
	@author hangum	
 -->
<sqlMap namespace="MsSQL_query">

<!-- 
	MSSQL의 버전 정보를 가져옵니다.
 -->
<select id="findDBInfo" resultClass="com.hangum.tadpole.sql.dao.DBInfoDAO">
	SELECT SERVERPROPERTY('productversion') productversion, SERVERPROPERTY ('productlevel') productlevel, SERVERPROPERTY ('edition') edition;
</select>

<!--
	database connection test 
 -->
<select id="connectionCheck" resultClass="java.lang.String" parameterClass="java.lang.String">
SELECT getdate()  
</select>

<!-- 
	table 이름
	
	select substring(convert(varchar(100), SERVERPROPERTY('ProductVersion')), 1, charindex('.', convert(varchar(100), SERVERPROPERTY('ProductVersion')) )-1) as version
 -->
<select id="tableList" resultClass="com.hangum.tadpole.sql.dao.mysql.TableDAO" parameterClass="java.lang.String">
SELECT
    tbl.name AS name
    ,p.value AS comment
  FROM
    sys.tables AS tbl
      LEFT JOIN sys.extended_properties AS p
        ON p.major_id = tbl.object_id
        AND p.minor_id = 0
        AND p.class = 1
  ORDER BY tbl.name ;	
</select>

<!-- 
	table, view의 컬럼 정보
 -->
<select id="tableColumnList" resultClass="com.hangum.tadpole.sql.dao.mysql.TableColumnDAO" parameterClass="java.util.HashMap">
SELECT  b.name field, 
        c.name + CASE WHEN c.xprec = 0 then '('+ rtrim(convert(char, b.length))+')' 
                 ELSE '('+ rtrim(convert(char, b.xprec)) + ',' + rtrim(convert( char, b.xscale)) + ')' 
        END type, 
        CASE WHEN b.isnullable = 0  then 'NO' 
             ELSE 'YES' 
        END notnull, 
        d.keyno mskey,
        p.value as comment
FROM sysobjects a INNER JOIN syscolumns b ON (a.id = b.id)
	INNER JOIN systypes c ON (b.xusertype = c.xusertype)
	LEFT OUTER JOIN dbo.sysindexkeys d ON (b.id =d.id and b.colid = d.colid and indid =1)
	LEFT JOIN sys.extended_properties AS p         ON p.major_id = a.id        AND p.minor_id = b.colid       AND p.class = 1
WHERE 
		a.name = #table#
ORDER BY a.id, b.colid
</select>

<!-- 
	테이블간의 관계 목록 정보를 얻습니다.
	erd 그릴때 관계 목록을 보여주기 위한 목적입니다.
 -->
<select id="referencedTableList"  resultClass="com.hangum.tadpole.sql.dao.mysql.ReferencedTableDAO" parameterClass="java.lang.String">
  SELECT X.TABLE_NAME
       ,X.CONSTRAINT_NAME
       , (MAX (CASE WHEN X.CONSTRAINT_COLUMN_ID = 1 THEN X.COLUMN_NAME ELSE '' END) + MAX (CASE WHEN X.CONSTRAINT_COLUMN_ID = 2 THEN ',' + X.COLUMN_NAME ELSE '' END)) AS COLUMN_NAME
       ,X.REFERENCED_TABLE_NAME
       , (MAX (CASE WHEN X.CONSTRAINT_COLUMN_ID = 1 THEN X.REFERENCED_COLUMN_NAME ELSE '' END) + MAX (CASE WHEN X.CONSTRAINT_COLUMN_ID = 2 THEN ',' + X.REFERENCED_COLUMN_NAME ELSE '' END)) AS REFERENCED_COLUMN_NAME
   FROM (SELECT B.CONSTRAINT_COLUMN_ID
               ,E.NAME AS TABLE_NAME
               ,C.NAME AS CONSTRAINT_NAME
               ,D.NAME AS COLUMN_NAME
               ,B.REFERENCED_COLUMN_ID
               ,G.NAME AS REFERENCED_TABLE_NAME
               ,F.NAME AS REFERENCED_COLUMN_NAME
           FROM SYS.FOREIGN_KEYS A
                INNER JOIN SYS.FOREIGN_KEY_COLUMNS B
                   ON A.OBJECT_ID = B.CONSTRAINT_OBJECT_ID
                INNER JOIN SYS.OBJECTS C
                   ON A.OBJECT_ID = C.OBJECT_ID
                INNER JOIN SYS.SYSCOLUMNS D
                   ON B.PARENT_OBJECT_ID = D.ID AND B.PARENT_COLUMN_ID = D.COLID
                INNER JOIN SYS.SYSOBJECTS E
                   ON B.PARENT_OBJECT_ID = E.ID
                INNER JOIN SYS.SYSCOLUMNS F
                   ON B.REFERENCED_OBJECT_ID = F.ID AND B.REFERENCED_COLUMN_ID = F.COLID
                INNER JOIN SYS.SYSOBJECTS G
                   ON B.REFERENCED_OBJECT_ID = G.ID) X
WHERE X.TABLE_NAME in ( $table$ )                     
GROUP BY X.TABLE_NAME, X.CONSTRAINT_NAME, X.REFERENCED_TABLE_NAME
</select>

<!-- 
	모든 erd 보기
 -->
<select id="referencedTableListALL"  resultClass="com.hangum.tadpole.sql.dao.mysql.ReferencedTableDAO" >
SELECT X.TABLE_NAME
       ,X.CONSTRAINT_NAME
       , (MAX (CASE WHEN X.CONSTRAINT_COLUMN_ID = 1 THEN X.COLUMN_NAME ELSE '' END) + MAX (CASE WHEN X.CONSTRAINT_COLUMN_ID = 2 THEN ',' + X.COLUMN_NAME ELSE '' END)) AS COLUMN_NAME
       ,X.REFERENCED_TABLE_NAME
       , (MAX (CASE WHEN X.CONSTRAINT_COLUMN_ID = 1 THEN X.REFERENCED_COLUMN_NAME ELSE '' END) + MAX (CASE WHEN X.CONSTRAINT_COLUMN_ID = 2 THEN ',' + X.REFERENCED_COLUMN_NAME ELSE '' END)) AS REFERENCED_COLUMN_NAME
   FROM (SELECT B.CONSTRAINT_COLUMN_ID
               ,E.NAME AS TABLE_NAME
               ,C.NAME AS CONSTRAINT_NAME
               ,D.NAME AS COLUMN_NAME
               ,B.REFERENCED_COLUMN_ID
               ,G.NAME AS REFERENCED_TABLE_NAME
               ,F.NAME AS REFERENCED_COLUMN_NAME
           FROM SYS.FOREIGN_KEYS A
                INNER JOIN SYS.FOREIGN_KEY_COLUMNS B
                   ON A.OBJECT_ID = B.CONSTRAINT_OBJECT_ID
                INNER JOIN SYS.OBJECTS C
                   ON A.OBJECT_ID = C.OBJECT_ID
                INNER JOIN SYS.SYSCOLUMNS D
                   ON B.PARENT_OBJECT_ID = D.ID AND B.PARENT_COLUMN_ID = D.COLID
                INNER JOIN SYS.SYSOBJECTS E
                   ON B.PARENT_OBJECT_ID = E.ID
                INNER JOIN SYS.SYSCOLUMNS F
                   ON B.REFERENCED_OBJECT_ID = F.ID AND B.REFERENCED_COLUMN_ID = F.COLID
                INNER JOIN SYS.SYSOBJECTS G
                   ON B.REFERENCED_OBJECT_ID = G.ID) X
GROUP BY X.TABLE_NAME, X.CONSTRAINT_NAME, X.REFERENCED_TABLE_NAME
</select>

<!-- 
	view 정보
 -->
<select id="viewList" resultClass="java.lang.String" parameterClass="java.lang.String">
	/*
	SELECT SERVERPROPERTY('productversion')
	select name from sys.views order by name	
	*/
	select name from sysobjects where xtype = 'V' order by name
</select>

<!-- 
	index 정보, SHOW INDEX FROM $tableName$
 -->
 <select id="indexList" resultClass="com.hangum.tadpole.sql.dao.mysql.InformationSchemaDAO" parameterClass="java.lang.String">
SELECT 
    i.table_schema 
    , i.table_name
    , i.constraint_schema as index_owner
    , i.constraint_name as index_name
    FROM information_schema.CONSTRAINT_TABLE_USAGE i
    
</select>

<!-- 
	index의 디테일 정보
 -->
 <select id="indexDetailList" resultClass="com.hangum.tadpole.sql.dao.mysql.InformationSchemaDAO" parameterClass="java.util.Map">
    	SELECT 
    	 table_name,
         0 as seq_in_index,
         constraint_name index_name,
         column_name,         
         table_catalog AS table_schema
    FROM information_schema.CONSTRAINT_COLUMN_USAGE
    WHERE constraint_name = #index_name#
</select>

<!-- 
	procedure list
 -->
<select id="procedureList" resultClass="com.hangum.tadpole.sql.dao.mysql.ProcedureFunctionDAO" parameterClass="java.lang.String">
	SELECT s.name,
		s.type,
	   #db_name# as db,
	   crdate as created
    FROM     sysobjects s
	WHERE    s.TYPE = 'P'
	ORDER BY s.name
</select>

<!-- 
	function list
 -->
<select id="functionList" resultClass="com.hangum.tadpole.sql.dao.mysql.ProcedureFunctionDAO" parameterClass="java.lang.String">
	SELECT s.name,
		s.type,
	   #db_name# as db,
	   crdate as created
    FROM     sysobjects s
	WHERE    s.TYPE = 'FN'
	ORDER BY s.name
</select>

<!-- 
	show triggers
 -->
<select id="triggerList" resultClass="com.hangum.tadpole.sql.dao.mysql.TriggerDAO" parameterClass="java.lang.String">
	SELECT s.name,
	 	#db_name# as db,
	   crdate as created 
	FROM sysobjects  s
	WHERE s.type = 'TR'
</select>

<!-- 
	table information
 -->
<select id="tableInformation" resultClass="java.util.HashMap" parameterClass="java.lang.String">
	select name from sys.tables
	order by name 
</select>

<!-- 
	RDB Information - Column summary page
 -->
<select id="columnInformation" resultClass="com.hangum.tadpole.sql.dao.rdb.RDBInfomationforColumnDAO" parameterClass="java.lang.String">
select    
      tbl.name as table_name
    ,tp.value      as table_comment
    ,a.name
    , b.name  as column_name
    , p.value as column_comment
    , c.name +  case  when c.xprec = 0 then '('+ rtrim(convert(char, b.length))+')' else '('+ rtrim(convert(char, b.xprec)) + ',' + rtrim(convert( char, b.xscale)) + ')'  end as data_type
    , case  when b.isnullable = 0 then 'NO' else 'YES'  end as nullable
    , (case when x.is_primary_key ='true' then 'PK' else ''  end) as pk
   from sys.tables  as tbl
   left join sys.extended_properties as tp   on tp.major_id = tbl.object_id  and tp.minor_id = 0  and tp.class    = 1
   inner join sysobjects a  on tbl.object_id = a.id
   inner join syscolumns b  on a.id = b.id
   inner join systypes c on  b.xusertype = c.xusertype
   left outer join dbo.sysindexkeys d  on  b.id  = d.id  and b.colid = d.colid  and indid   =1 
   left join sys.extended_properties as p  on p.major_id     = a.id  and p.minor_id = b.colid  and p.class    = 1
   left join sys.indexes x   on x.object_id    = a.id  and x.index_id = d.indid
   order by tbl.name, b.colid
</select>

<!-- 
	Table DDL Script
 -->
<select id="getTableScript" resultClass="java.util.HashMap" parameterClass="java.lang.String">
	select t.name as TABLE_NAME
	    , c.name as COLUMN_NAME
		, d.name as DATA_TYPE
		, c.max_length as DATA_LENGTH
		, c.precision as DATA_PRECISION
		, c.scale as DATA_SCALE
		, (case when c.is_nullable = 0 then 'NO' else 'YES' end) as NULLABLE 
		, USER as OWNER
		, v.definition as DATA_DEFAULT
	from sys.tables t 
	   inner join sys.columns c on t.object_id = c.object_id
	   inner join sys.types d on c.system_type_id = d.system_type_id
	   left join sys.default_constraints v on v.parent_object_id = t.object_id and c.column_id = v.parent_column_id
	 where 1=1
	    and t.name = #table_name#
	order by c.column_id
</select>

<!-- 
	Table DDL Script => Primary key list
 -->
 
<select id="getTableScript.pk" resultClass="java.util.HashMap" parameterClass="java.lang.String">
	select p.name as CONSTRAINT_NAME
	, tc.name as COLUMN_NAME 
	, c.is_descending_key as DESCENDING
	, p.type_desc as INDEX_TYPE
	from sys.indexes p
	  inner join sys.tables t on p.object_id = t.object_id
	  inner join sys.index_columns c on t.object_id = c.object_id 
	  inner join sys.all_columns tc on tc.object_id = t.object_id and c.column_id = tc.column_id
	  where 1=1
	  and t.name = #table_name#
	order by c.key_ordinal

</select>

<!-- 
	Table DDL Script => Table, Column Comment Script
 -->
 
<select id="getTableScript.comments" resultClass="java.lang.String" parameterClass="java.lang.String">
SELECT
	'exec sp_addextendedproperty ''Caption'', ''' 
		+ convert(varchar, p.value) 
		+ ''', ''user'', dbo, ''table'', ''' 
		+ convert(varchar, tbl.name) 
		+ ''' ;'  as comment 
  FROM sys.tables AS tbl
      INNER JOIN sys.extended_properties AS p
        ON p.major_id = tbl.object_id
   WHERE 1=1
        AND p.minor_id = 0
        AND p.class = 1
        AND tbl.name = #table#
        AND p.value &gt; ''
  UNION ALL
SELECT  
	'exec sp_addextendedproperty ''Caption'', ''' 
		+ convert(varchar, p.value) 
		+ ''', ''user'', dbo, ''table'', ''' 
		+ convert(varchar, a.name) 
		+ ''', ''column'', ''' 
		+ convert(varchar, b.name) 
		+ ''' ;'  as comment 
FROM sysobjects a INNER JOIN syscolumns b ON (a.id = b.id)
	INNER JOIN systypes c ON (b.xusertype = c.xusertype)
	LEFT OUTER JOIN dbo.sysindexkeys d ON (b.id =d.id and b.colid = d.colid and indid =1)
	LEFT JOIN sys.extended_properties AS p ON p.major_id = a.id AND p.minor_id = b.colid AND p.class = 1
WHERE 1=1
  AND a.name = #table#
  AND p.value &gt; ''
  
</select>

<!-- 
	View, Function, Procedure, Trigger Script 
	
    select text from syscomments where id = OBJECT_ID('mall_item_UP')
 -->
 
<select id="getViewScript" resultClass="java.lang.String" parameterClass="java.lang.String">
sp_helptext $object_name$
</select>
<select id="getFunctionScript" resultClass="java.lang.String" parameterClass="java.lang.String">
sp_helptext $object_name$
</select>
<select id="getProcedureScript" resultClass="java.lang.String" parameterClass="java.lang.String">
sp_helptext $object_name$
</select>
<select id="getTriggerScript" resultClass="java.lang.String" parameterClass="java.lang.String">
sp_helptext $object_name$
</select>

<select id="getProcedureInParamter" resultClass="com.hangum.tadpole.sql.dao.rdb.InOutParameterDAO" parameterClass="java.lang.String">

select 
   p.ordinal_position as "order"
   , p.parameter_name as "name"
   , p.data_type as rdbtype
   , p.parameter_mode as "type"
   , p.numeric_precision as data_length
   , p.numeric_precision
   , p.numeric_scale
   , '' as value
from information_schema.parameters p
where 1=1
and p.specific_name=#object_name#
and p.parameter_mode in ('IN','INOUT')
order by ordinal_position 
  
</select> 
   
<select id="getProcedureOutParamter" resultClass="com.hangum.tadpole.sql.dao.rdb.InOutParameterDAO" parameterClass="java.lang.String">

select 
   p.ordinal_position as "order"
   , p.parameter_name as "name"
   , p.data_type as rdbtype
   , p.parameter_mode as "type"
   , p.numeric_precision as data_length
   , p.numeric_precision
   , p.numeric_scale
   , '' as value
from information_schema.parameters p
where 1=1
and p.specific_name=#object_name#
and p.parameter_mode in ('OUT','INOUT')
order by ordinal_position 
  
</select>  

</sqlMap>
